(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{407:function(t,a,e){"use strict";e.r(a);var n=e(56),i=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{staticStyle:{margin:"0px"}},[t._v("Web development components")]),t._v(" "),e("div",{staticClass:"features",staticStyle:{border:"0px","margin-top":"0px","padding-top":"0px"}},[e("div",{staticClass:"feature"},[e("h2",[t._v("Magician")]),t._v(" "),e("p",[t._v("A small Http service based on Netty that supports http and WebSocket and can use annotations to declare\n      Handler, If you want to develop an http service with netty but find it cumbersome, then Magician may help\n      you.")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h2",[t._v("Magician-Route")]),t._v(" "),e("p",[t._v("Magician-Route is developed from Magician-Web, mainly by removing the reflection inside, sacrificing a\n      little ease of use and putting the focus on performance")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h2",[t._v("Magician-JDBC")]),t._v(" "),e("p",[t._v("A database operations framework that supports multiple data sources, transaction management, paging\n      queries, single table operations without SQL, complex operations can write their own SQL, support for\n      entity parameters, support for {} and ? placeholder")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h2",[t._v("Magician-Web")]),t._v(" "),e("p",[t._v("Magician-Web is an MVC extension to the Magician framework that supports controller management,\n      interceptors, JWT, automatic parameter validation, entity receiving parameters and more.")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h2",[t._v("Magician-Containers")]),t._v(" "),e("p",[t._v("Container management module that allows for the unified management of beans in a project, which brings\n      two extensions, AOP and timed tasks")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h2",[t._v("Magician-Configure")]),t._v(" "),e("p",[t._v("Magician-Configure is a configuration manager that can easily read configuration files from external,\n      remote, and local(class resource directories) and cache them in key-value form in the project. When\n      fetching configuration data, if it is not in the cache, it will automatically go to the environment\n      variables to fetch")])])]),t._v(" "),e("h2",{staticStyle:{margin:"0px"}},[t._v("Blockchain development components")]),t._v(" "),e("div",{staticClass:"features",staticStyle:{border:"0px","margin-top":"0px","padding-top":"0px"}},[e("div",{staticClass:"feature"},[e("h2",[t._v("Magician-Scanning")]),t._v(" "),e("p",[t._v("\n      Magician-Scanning is a toolkit developed in Java for scanning blockchains, which can be used to monitor transactions according to the needs of developers, and it plans to support three chains, ETH (BSC, POLYGON, etc.), SOL and TRON\n    ")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h2",[t._v("Magician-ContractsTools")]),t._v(" "),e("p",[t._v("\n      Magician-ContractsTools is a toolkit for calling smart contracts , you can very easily call smart contracts in Java programs for query and write operations\n    ")])]),t._v(" "),e("div",{staticClass:"feature"},[e("h2",[t._v(" ")]),t._v(" "),e("p",[t._v("\n       \n    ")])])])])}),[],!1,null,null,null);a.default=i.exports}}]);